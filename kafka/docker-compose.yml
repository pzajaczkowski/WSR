services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    networks:
      - broker-kafka
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:29092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    container_name: kafdrop
    networks:
      - broker-kafka
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  consumer:
    container_name: consumer
    build:
      context: ./consumer
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=resource_usage
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    restart: "always"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - broker-kafka
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  publisher_1:
    container_name: publisher_1
    build:
      context: ./publisher
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=resource_usage
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
      - PUBLISHER_ID=1
    restart: "always"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - broker-kafka
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

  publisher_2:
    container_name: publisher_2
    build:
      context: ./publisher
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=resource_usage
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
      - PUBLISHER_ID=2
    restart: "always"
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - broker-kafka
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M

networks:
  broker-kafka:
